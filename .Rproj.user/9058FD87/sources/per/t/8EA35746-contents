
opps<-function(dataframe)
{
  require(pbmcapply)
  require(dplyr)
  combi<-data.frame(combinations(dataframe))
  #include symbolic Opps in list below
  oppsbasic<-c("+", "*","/")
  possiblities<-cbind(expand.grid(combi[,1], oppsbasic),Var3=combi[,2])
  possiblities$term<-paste0("df$`",possiblities$Var1,"` ", possiblities$Var2, " ","df$`",possiblities$Var3,"`")
  opps_func <- c("percent_rank", "cumsum", "cummean", "sin", "cos", "tan") #, "cummin", "cummax")
  possibilities_func <- expand.grid(colnames(dataframe), opps_func)
  possibilities_func$Var3 <- NA
  possibilities_func$term <- paste0(possibilities_func$Var2, "(", "df$`", possibilities_func$Var1, "`) ")

  opps_func_def <- c("square", "cube")
  possibilities_func_def <- expand.grid(colnames(dataframe), opps_func_def)
  possibilities_func_def$Var3 <- NA
  possibilities_func_def$term <- paste0(possibilities_func_def$Var2, "(", "df$`", possibilities_func_def$Var1, "`) ")


  possiblities <- rbind(possiblities, possibilities_func,possibilities_func_def)

  #Create more combinations using formula in possibilities and include it in term - List must   be unique
  term<-possiblities$term

  output<-do.call(cbind,pbmclapply(term, getvar, df=dataframe, mc.cores = 4))
  output_filtered <- data.table(output)[, !grepl("V[0-9]+", names(output)), with=F]
  return(data.table(output_filtered))

}
